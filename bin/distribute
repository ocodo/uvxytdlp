#!/bin/bash

PROOT=$(git rev-parse --show-toplevel)

FILES=(
  "$PROOT/README.md"
  "$PROOT/src/lib/version.ts"
  "$PROOT/apiserver/app.py"
)

GHCRIO_URL="ghcr.io/ocodo/uvxytdlp/uvxytdlp-ui"

usage() {
      cat <<EOF
Usage: $0 <new-tagname>

README.md and src/lib/version.ts will be patched with the new tagname
EOF

}

if [[ -z $PROOT ]]; then
    echo "Error: Not in a git repository"
    exit 1
fi

cd $PROOT

if ! command -v jq 2>&1 > /dev/null; then
    echo "Error: jq not installed, required"
    exit 2
fi

PROJECT=$(jq -r '.name' < package.json)

if ! git diff-index --quiet HEAD -- ;then
    echo "Error: all changes must be committed before release as $1"
    exit 7
fi

tagname=$(git tag --sort=-committerdate | head -1 2> /dev/null)

if [[ -z $tagname ]]; then
    echo "Error: No previous tag found, exiting..."
    exit 4
fi

if [[ $# != 1 ]]; then
  usage
    exit 5
fi

export newtag=$(tr ' ' '-' <<<$1) # spaces to dashes

if [[ $(git tag --list) == *$newtag* ]]; then
  cat <<EOF
$newtag is already used:

$(git show $newtag)
EOF
  exit 8
fi

replace_tag_reference_in_file() {
    if [[ $# == 2 && -f $2 ]]; then
      sed -i'' "s/$tagname/$newtag/" $2
      export newtag=$(tr ' ' '-' <<<$1) # spaces to dashes
    else
      echo "\nError: $2 file not found\n"
      exit 6
    fi
}

for file in "${FILES[@]}"
do
  replace_tag_reference_in_file $1 $file
done

git diff
git add --all
git commit -m $1
git tag $1

cat <<EOF
============================================================
Committed/Tagged $1

Push to github to trigger docker build and release as:

 - $GHCRIO_URL:latest
 - $GHCRIO_URL:$1

To revert, avoid push and:

  git reset HEAD
  git tag -d $1

EOF
